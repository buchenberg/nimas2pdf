// Copyright (C) 2009 Eightfold Consulting LLC
//
// This program is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License
// as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.
//
// This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;
// without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
// See the GNU General Public License for more details.
//
// You should have received a copy of the GNU General Public License along with this program;
// if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA

package org.eightfoldconsulting.nimas2pdf;

import java.awt.GraphicsEnvironment;
import java.io.File;
import java.io.FileOutputStream;
import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;

/**
 *
 * @author Gregory Buchenberger
 */
public class FrameOptions extends javax.swing.JFrame {

    String imageMagickDir = FrameMain.applicationProps.getProperty("imagemagickdir");
    Boolean isPDFaSelected = Boolean.parseBoolean(FrameMain.applicationProps.getProperty("pdfA"));
    Boolean isAccessiblePDFSelected = Boolean.parseBoolean(FrameMain.applicationProps.getProperty("accessiblePDF"));
    Boolean isBookmarkHeadersSelected = Boolean.parseBoolean(FrameMain.applicationProps.getProperty("bookmarkHeaders"));
    Boolean isBookmarkTablesSelected = Boolean.parseBoolean(FrameMain.applicationProps.getProperty("bookmarkTables"));
    Boolean isOrientationPortrait;
    Boolean isOrientationLandscape;
    String[] fontFamilyNames;

    /** Creates new form OptionsFrame */
    public FrameOptions() {
        GraphicsEnvironment e = GraphicsEnvironment.getLocalGraphicsEnvironment();
        fontFamilyNames = e.getAvailableFontFamilyNames();
         if (FrameMain.applicationProps.getProperty("pageOrientation").equals("portrait") ){
            isOrientationPortrait = true;
            isOrientationLandscape = false;
        } else {
            isOrientationPortrait = false;
            isOrientationLandscape = true;
        }
        initComponents();
       
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        outputButtonGroup = new javax.swing.ButtonGroup();
        buttonGroupPageOrientation = new javax.swing.ButtonGroup();
        buttonSave = new javax.swing.JButton();
        tabbedPaneIOptions = new javax.swing.JTabbedPane();
        panelStyle = new javax.swing.JPanel();
        tabbedPaneStyle = new javax.swing.JTabbedPane();
        jPanel5 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        baseFontFamilyComboBox = new javax.swing.JComboBox();
        headerFontFamilyComboBox = new javax.swing.JComboBox();
        jPanel6 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        tableFontSizeSpinner = new javax.swing.JSpinner();
        baseFontSizeSpinner = new javax.swing.JSpinner();
        panelPDF = new javax.swing.JPanel();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanelPageSize = new javax.swing.JPanel();
        jRadioButtonPortrait = new javax.swing.JRadioButton();
        jRadioButtonLandscape = new javax.swing.JRadioButton();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jTextFieldPageWidth = new javax.swing.JTextField();
        jTextFieldPageHeight = new javax.swing.JTextField();
        jPanel1 = new javax.swing.JPanel();
        pdfaCheckBox = new javax.swing.JCheckBox();
        accessibleCheckBox = new javax.swing.JCheckBox();
        jPanel2 = new javax.swing.JPanel();
        jCheckBoxBookmarkHeaders = new javax.swing.JCheckBox();
        jCheckBoxBookmarkTables = new javax.swing.JCheckBox();
        panelImageMagick = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        textFieldImageMagickDirectory = new javax.swing.JTextField();
        chooseIMDirectoryButton = new javax.swing.JButton();
        labelImageMagickDirectoryInfoEG = new javax.swing.JLabel();
        labelImageMagickDirectoryInfo = new javax.swing.JLabel();
        buttonCancel = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Options");
        setAlwaysOnTop(true);

        buttonSave.setIcon(new javax.swing.ImageIcon(getClass().getResource("/org/eightfoldconsulting/nimas2pdf/resources/disk.png"))); // NOI18N
        buttonSave.setText("Save");
        buttonSave.setToolTipText("Save global options");
        buttonSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonSaveActionPerformed(evt);
            }
        });

        jLabel2.setText("Base Font Family");

        jLabel3.setText("Header Font Family");

        baseFontFamilyComboBox.setEditable(true);
        baseFontFamilyComboBox.setModel(new javax.swing.DefaultComboBoxModel(fontFamilyNames));
        baseFontFamilyComboBox.setSelectedItem(FrameMain.applicationProps.getProperty("baseFontFamily"));
        baseFontFamilyComboBox.setToolTipText("Choose font family for all elements excluding headers");
        baseFontFamilyComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                baseFontFamilyComboBoxActionPerformed(evt);
            }
        });

        headerFontFamilyComboBox.setEditable(true);
        headerFontFamilyComboBox.setModel(new javax.swing.DefaultComboBoxModel(fontFamilyNames));
        headerFontFamilyComboBox.setSelectedItem(FrameMain.applicationProps.getProperty("headerFontFamily"));
        headerFontFamilyComboBox.setToolTipText("Choose font family for header elements only");
        headerFontFamilyComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                headerFontFamilyComboBoxActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3))
                .addGap(18, 18, 18)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(headerFontFamilyComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(baseFontFamilyComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(114, Short.MAX_VALUE))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(baseFontFamilyComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(headerFontFamilyComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(26, Short.MAX_VALUE))
        );

        tabbedPaneStyle.addTab("Font Family", jPanel5);

        jLabel4.setText("Base Font Size");

        jLabel5.setText("Table Font Size");

        tableFontSizeSpinner.setModel(new javax.swing.SpinnerNumberModel(Integer.parseInt(FrameMain.applicationProps.getProperty("tableFontSize")), 8, 32, 2));

        baseFontSizeSpinner.setModel(new javax.swing.SpinnerNumberModel(Integer.parseInt(FrameMain.applicationProps.getProperty("baseFontSize")), 8, 32, 2));

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4)
                    .addComponent(jLabel5))
                .addGap(37, 37, 37)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(tableFontSizeSpinner)
                    .addComponent(baseFontSizeSpinner, javax.swing.GroupLayout.DEFAULT_SIZE, 48, Short.MAX_VALUE)))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(baseFontSizeSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(tableFontSizeSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(26, Short.MAX_VALUE))
        );

        tabbedPaneStyle.addTab("Font Size", jPanel6);

        javax.swing.GroupLayout panelStyleLayout = new javax.swing.GroupLayout(panelStyle);
        panelStyle.setLayout(panelStyleLayout);
        panelStyleLayout.setHorizontalGroup(
            panelStyleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelStyleLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(tabbedPaneStyle, javax.swing.GroupLayout.DEFAULT_SIZE, 363, Short.MAX_VALUE)
                .addContainerGap())
        );
        panelStyleLayout.setVerticalGroup(
            panelStyleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelStyleLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(tabbedPaneStyle, javax.swing.GroupLayout.DEFAULT_SIZE, 116, Short.MAX_VALUE)
                .addContainerGap())
        );

        tabbedPaneIOptions.addTab("Style", new javax.swing.ImageIcon(getClass().getResource("/org/eightfoldconsulting/nimas2pdf/resources/page_white_paintbrush.png")), panelStyle); // NOI18N

        buttonGroupPageOrientation.add(jRadioButtonPortrait);
        jRadioButtonPortrait.setSelected(isOrientationPortrait);
        jRadioButtonPortrait.setText("Portrait");

        buttonGroupPageOrientation.add(jRadioButtonLandscape);
        jRadioButtonLandscape.setSelected(isOrientationLandscape);
        jRadioButtonLandscape.setText("Landscape");

        jLabel6.setText("Width");

        jLabel7.setText("Height");

        jTextFieldPageWidth.setText(FrameMain.applicationProps.getProperty("pageWidth"));

        jTextFieldPageHeight.setText(FrameMain.applicationProps.getProperty("pageHeight"));

        javax.swing.GroupLayout jPanelPageSizeLayout = new javax.swing.GroupLayout(jPanelPageSize);
        jPanelPageSize.setLayout(jPanelPageSizeLayout);
        jPanelPageSizeLayout.setHorizontalGroup(
            jPanelPageSizeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelPageSizeLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelPageSizeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel7)
                    .addComponent(jLabel6))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanelPageSizeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jTextFieldPageHeight)
                    .addComponent(jTextFieldPageWidth, javax.swing.GroupLayout.DEFAULT_SIZE, 50, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(jPanelPageSizeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jRadioButtonLandscape)
                    .addComponent(jRadioButtonPortrait))
                .addContainerGap(140, Short.MAX_VALUE))
        );
        jPanelPageSizeLayout.setVerticalGroup(
            jPanelPageSizeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelPageSizeLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelPageSizeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(jTextFieldPageWidth, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jRadioButtonPortrait))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanelPageSizeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(jTextFieldPageHeight, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jRadioButtonLandscape))
                .addContainerGap(29, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Page Size", jPanelPageSize);

        pdfaCheckBox.setSelected(isPDFaSelected);
        pdfaCheckBox.setText("PDF/A-1b");

        accessibleCheckBox.setSelected(isAccessiblePDFSelected );
        accessibleCheckBox.setText("Accessible PDF");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(pdfaCheckBox)
                    .addComponent(accessibleCheckBox))
                .addContainerGap(255, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(pdfaCheckBox)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(accessibleCheckBox)
                .addContainerGap(32, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Format", jPanel1);

        jCheckBoxBookmarkHeaders.setSelected(isBookmarkHeadersSelected);
        jCheckBoxBookmarkHeaders.setText("Create header bookmarks");

        jCheckBoxBookmarkTables.setSelected(isBookmarkTablesSelected);
        jCheckBoxBookmarkTables.setText("Create table bookmarks");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jCheckBoxBookmarkHeaders)
                    .addComponent(jCheckBoxBookmarkTables))
                .addContainerGap(203, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jCheckBoxBookmarkHeaders)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jCheckBoxBookmarkTables)
                .addContainerGap(32, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Bookmarks", jPanel2);

        javax.swing.GroupLayout panelPDFLayout = new javax.swing.GroupLayout(panelPDF);
        panelPDF.setLayout(panelPDFLayout);
        panelPDFLayout.setHorizontalGroup(
            panelPDFLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelPDFLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 363, Short.MAX_VALUE)
                .addContainerGap())
        );
        panelPDFLayout.setVerticalGroup(
            panelPDFLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelPDFLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTabbedPane1)
                .addContainerGap())
        );

        tabbedPaneIOptions.addTab("PDF options", new javax.swing.ImageIcon(getClass().getResource("/org/eightfoldconsulting/nimas2pdf/resources/page_white_acrobat.png")), panelPDF); // NOI18N

        jLabel1.setLabelFor(textFieldImageMagickDirectory);
        jLabel1.setText("ImageMagick directory");

        textFieldImageMagickDirectory.setText(FrameMain.applicationProps.getProperty("imagemagickdir"));

        chooseIMDirectoryButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/org/eightfoldconsulting/nimas2pdf/resources/drive_go.png"))); // NOI18N
        chooseIMDirectoryButton.setToolTipText("Browse to ImageMagick directory");
        chooseIMDirectoryButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chooseIMDirectoryButtonActionPerformed(evt);
            }
        });

        labelImageMagickDirectoryInfoEG.setText("(e.g., C:\\Program Files\\ImageMagick-x.x.x )");

        labelImageMagickDirectoryInfo.setLabelFor(textFieldImageMagickDirectory);
        labelImageMagickDirectoryInfo.setText("<html>ImageMagick is required for image downsizing and may be downloaded from <br/> http://www.imagemagick.org/script/binary-releases.php</html> ");

        javax.swing.GroupLayout panelImageMagickLayout = new javax.swing.GroupLayout(panelImageMagick);
        panelImageMagick.setLayout(panelImageMagickLayout);
        panelImageMagickLayout.setHorizontalGroup(
            panelImageMagickLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelImageMagickLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelImageMagickLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelImageMagickLayout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(18, 18, 18)
                        .addGroup(panelImageMagickLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(labelImageMagickDirectoryInfoEG)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelImageMagickLayout.createSequentialGroup()
                                .addComponent(textFieldImageMagickDirectory, javax.swing.GroupLayout.DEFAULT_SIZE, 183, Short.MAX_VALUE)
                                .addGap(18, 18, 18)
                                .addComponent(chooseIMDirectoryButton, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addComponent(labelImageMagickDirectoryInfo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
        panelImageMagickLayout.setVerticalGroup(
            panelImageMagickLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelImageMagickLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelImageMagickLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(textFieldImageMagickDirectory, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(chooseIMDirectoryButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(labelImageMagickDirectoryInfoEG)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 43, Short.MAX_VALUE)
                .addComponent(labelImageMagickDirectoryInfo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        labelImageMagickDirectoryInfo.getAccessibleContext().setAccessibleName("ImageMagick is required for image downsizing and may be downloaded from http://www.imagemagick.org/script/binary-releases.php\n\n");
        labelImageMagickDirectoryInfo.getAccessibleContext().setAccessibleDescription("Where to get ImageMagick");

        tabbedPaneIOptions.addTab("ImageMagick", new javax.swing.ImageIcon(getClass().getResource("/org/eightfoldconsulting/nimas2pdf/resources/page_white_picture.png")), panelImageMagick); // NOI18N

        buttonCancel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/org/eightfoldconsulting/nimas2pdf/resources/cancel.png"))); // NOI18N
        buttonCancel.setText("Cancel");
        buttonCancel.setToolTipText("Cancel without saving");
        buttonCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonCancelActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(tabbedPaneIOptions, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 388, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(buttonCancel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(buttonSave)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(tabbedPaneIOptions)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(buttonSave)
                    .addComponent(buttonCancel))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void chooseIMDirectoryButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chooseIMDirectoryButtonActionPerformed
        JFileChooser jfc = new JFileChooser();
        jfc.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
        int result = jfc.showOpenDialog(panelImageMagick);
        if (result == JFileChooser.APPROVE_OPTION) {
            File file = jfc.getSelectedFile();
            try {
                imageMagickDir = file.getCanonicalPath().toString();
                textFieldImageMagickDirectory.setText(imageMagickDir);
            } catch (IOException ex) {
                Logger.getLogger(FrameOptions.class.getName()).log(Level.SEVERE, null, ex);
            }      
        } else {
            return;
        }
    }//GEN-LAST:event_chooseIMDirectoryButtonActionPerformed

    private void buttonSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonSaveActionPerformed
        //update application properties
        //ImageMagick Options
        FrameMain.applicationProps.setProperty("imagemagickdir", imageMagickDir);
        //Style options
        FrameMain.applicationProps.setProperty("baseFontFamily", baseFontFamilyComboBox.getSelectedItem().toString());
        FrameMain.applicationProps.setProperty("headerFontFamily", headerFontFamilyComboBox.getSelectedItem().toString());
        FrameMain.applicationProps.setProperty("baseFontSize", baseFontSizeSpinner.getValue().toString());
        FrameMain.applicationProps.setProperty("tableFontSize", tableFontSizeSpinner.getValue().toString());
        //PDF Options
        FrameMain.applicationProps.setProperty("pageWidth", jTextFieldPageWidth.getText());
        FrameMain.applicationProps.setProperty("pageHeight", jTextFieldPageHeight.getText());
        if (jRadioButtonPortrait.isSelected()){
            FrameMain.applicationProps.setProperty("pageOrientation", "portrait");
        } else {
            FrameMain.applicationProps.setProperty("pageOrientation", "landscape");
        }
        
        Boolean pdfa = pdfaCheckBox.isSelected();
        FrameMain.applicationProps.setProperty("pdfA", pdfa.toString());
        Boolean apdf = accessibleCheckBox.isSelected();
        FrameMain.applicationProps.setProperty("accessiblePDF", apdf.toString());
        Boolean bookmarkHeaders = jCheckBoxBookmarkHeaders.isSelected();
        FrameMain.applicationProps.setProperty("bookmarkHeaders", bookmarkHeaders.toString());
        Boolean bookmarkTables = jCheckBoxBookmarkTables.isSelected();
        FrameMain.applicationProps.setProperty("bookmarkTables", bookmarkTables.toString());
        
        //save application properties
        FileOutputStream out;
        try {
            out = new FileOutputStream(System.getProperty("user.home")+File.separator+".nimas2pdf"+File.separator+ "application.properties");
            //out = new FileOutputStream(FrameMain.applicationPropertiesFilePath);
            FrameMain.applicationProps.store(out, "--- NIMAS2PDF properties file ---");
            this.setVisible(false);
        } catch (IOException ex) {
            JOptionPane.showMessageDialog(null,  "Error saving properties file "+System.getProperty("user.home")+File.separator+".nimas2pdf"+File.separator+ "application.properties"+":\n" + ex.getMessage(),  "Oops!", JOptionPane.ERROR_MESSAGE);
            return;
        }
    }//GEN-LAST:event_buttonSaveActionPerformed

    private void buttonCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonCancelActionPerformed
        this.setVisible(false);
    }//GEN-LAST:event_buttonCancelActionPerformed

    private void baseFontFamilyComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_baseFontFamilyComboBoxActionPerformed
        // TODO add your handling code here:
}//GEN-LAST:event_baseFontFamilyComboBoxActionPerformed

    private void headerFontFamilyComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_headerFontFamilyComboBoxActionPerformed
        // TODO add your handling code here:
}//GEN-LAST:event_headerFontFamilyComboBoxActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JCheckBox accessibleCheckBox;
    private javax.swing.JComboBox baseFontFamilyComboBox;
    private javax.swing.JSpinner baseFontSizeSpinner;
    private javax.swing.JButton buttonCancel;
    private javax.swing.ButtonGroup buttonGroupPageOrientation;
    private javax.swing.JButton buttonSave;
    private javax.swing.JButton chooseIMDirectoryButton;
    private javax.swing.JComboBox headerFontFamilyComboBox;
    private javax.swing.JCheckBox jCheckBoxBookmarkHeaders;
    private javax.swing.JCheckBox jCheckBoxBookmarkTables;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanelPageSize;
    private javax.swing.JRadioButton jRadioButtonLandscape;
    private javax.swing.JRadioButton jRadioButtonPortrait;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTextField jTextFieldPageHeight;
    private javax.swing.JTextField jTextFieldPageWidth;
    private javax.swing.JLabel labelImageMagickDirectoryInfo;
    private javax.swing.JLabel labelImageMagickDirectoryInfoEG;
    private javax.swing.ButtonGroup outputButtonGroup;
    private javax.swing.JPanel panelImageMagick;
    private javax.swing.JPanel panelPDF;
    private javax.swing.JPanel panelStyle;
    private javax.swing.JCheckBox pdfaCheckBox;
    private javax.swing.JTabbedPane tabbedPaneIOptions;
    private javax.swing.JTabbedPane tabbedPaneStyle;
    private javax.swing.JSpinner tableFontSizeSpinner;
    private javax.swing.JTextField textFieldImageMagickDirectory;
    // End of variables declaration//GEN-END:variables
}
