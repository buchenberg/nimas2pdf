/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * FrameImageResize.java
 *
 * Created on Dec 29, 2009, 6:12:56 PM
 */
package org.eightfoldconsulting.nimas2pdf;

import java.awt.Cursor;
import java.io.File;
import java.util.List;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.SwingWorker;
import org.w3c.dom.NodeList;

/**
 *
 * @author Gregory Buchenberger
 */
public class FrameImageResize extends javax.swing.JFrame {
    Logger logger = Logger.getLogger(this.getClass().getName());

    /** Creates new form FrameImageResize */
    public FrameImageResize() {
        initComponents();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jTextFieldOPFDir = new javax.swing.JTextField();
        jPanelImageResize = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jFormattedTextFieldHeight = new javax.swing.JFormattedTextField();
        jFormattedTextFieldWidth = new javax.swing.JFormattedTextField();
        jButtonChooseOPFFile = new javax.swing.JButton();
        jButtonShrink = new javax.swing.JButton();
        jProgressBar = new javax.swing.JProgressBar();
        jLabelStatus = new javax.swing.JLabel();
        jButtonCancel = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        jFormattedTextFieldDPI = new javax.swing.JFormattedTextField();
        jLabel4 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Image Shrink");

        jLabel1.setText("Package File");

        jPanelImageResize.setBorder(javax.swing.BorderFactory.createTitledBorder("Content Area Dimensions"));

        jLabel2.setText("Width");

        jLabel3.setText("Height");

        jLabel5.setText("inches");

        jLabel7.setText("inches");

        jFormattedTextFieldHeight.setText("5.5");
        jFormattedTextFieldHeight.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jFormattedTextFieldHeightActionPerformed(evt);
            }
        });

        jFormattedTextFieldWidth.setText("9.5");
        jFormattedTextFieldWidth.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jFormattedTextFieldWidthActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanelImageResizeLayout = new javax.swing.GroupLayout(jPanelImageResize);
        jPanelImageResize.setLayout(jPanelImageResizeLayout);
        jPanelImageResizeLayout.setHorizontalGroup(
            jPanelImageResizeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelImageResizeLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelImageResizeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanelImageResizeLayout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jFormattedTextFieldWidth, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanelImageResizeLayout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addGap(18, 18, 18)
                        .addComponent(jFormattedTextFieldHeight, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanelImageResizeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel7)
                    .addComponent(jLabel5))
                .addContainerGap(290, Short.MAX_VALUE))
        );
        jPanelImageResizeLayout.setVerticalGroup(
            jPanelImageResizeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelImageResizeLayout.createSequentialGroup()
                .addGroup(jPanelImageResizeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jFormattedTextFieldWidth, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanelImageResizeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jLabel7)
                    .addComponent(jFormattedTextFieldHeight, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jButtonChooseOPFFile.setIcon(new javax.swing.ImageIcon(getClass().getResource("/org/eightfoldconsulting/nimas2pdf/resources/drive_go.png"))); // NOI18N
        jButtonChooseOPFFile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonChooseOPFFileActionPerformed(evt);
            }
        });

        jButtonShrink.setIcon(new javax.swing.ImageIcon(getClass().getResource("/org/eightfoldconsulting/nimas2pdf/resources/page_white_picture.png"))); // NOI18N
        jButtonShrink.setText("Shrink");
        jButtonShrink.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonShrinkActionPerformed(evt);
            }
        });

        jButtonCancel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/org/eightfoldconsulting/nimas2pdf/resources/cancel.png"))); // NOI18N
        jButtonCancel.setText("Cancel");
        jButtonCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonCancelActionPerformed(evt);
            }
        });

        jLabel6.setText("DPI");

        jFormattedTextFieldDPI.setText("300");

        jLabel4.setText("Image Resolution");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanelImageResize, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jProgressBar, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 466, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(18, 18, 18)
                        .addComponent(jTextFieldOPFDir, javax.swing.GroupLayout.DEFAULT_SIZE, 330, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButtonChooseOPFFile))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabelStatus)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 385, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jButtonCancel)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)))
                        .addComponent(jButtonShrink))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addGap(18, 18, 18)
                        .addComponent(jFormattedTextFieldDPI, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel6)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jTextFieldOPFDir, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonChooseOPFFile))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jFormattedTextFieldDPI, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6))
                .addGap(18, 18, 18)
                .addComponent(jPanelImageResize, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jButtonShrink)
                        .addComponent(jButtonCancel))
                    .addComponent(jLabelStatus))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jProgressBar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonShrinkActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonShrinkActionPerformed
        jButtonShrink.setEnabled(false);
        File opfFile;
        //File sourceDir;
        String source = jTextFieldOPFDir.getText();
        if (FrameMain.applicationProps.getProperty("imagemagickdir").isEmpty()) {
            JOptionPane.showMessageDialog(null, "Please set the path to the ImageMagick directory in Global options menu.", "Oops!", JOptionPane.ERROR_MESSAGE);
            //logger.severe("Image resize failed. ImageMagick must be installed and the directory must be set in Options > Global Options > ImageMagick.");
            jButtonShrink.setEnabled(true);
            setCursor(Cursor.getPredefinedCursor(Cursor.DEFAULT_CURSOR));
            return;
        } else if (source.length() == 0){
            JOptionPane.showMessageDialog(null, "Please select a NIMAS package file.", "Oops!", JOptionPane.ERROR_MESSAGE);  
             jButtonShrink.setEnabled(true);
            setCursor(Cursor.getPredefinedCursor(Cursor.DEFAULT_CURSOR));
            return;
        } else {
            opfFile = new File(source);
            //sourceDir = new File(sourceFile.getParent());
            
            setCursor(Cursor.getPredefinedCursor(Cursor.WAIT_CURSOR));
            int dpi = Integer.parseInt(jFormattedTextFieldDPI.getText());
            Float iwidth = Float.parseFloat(jFormattedTextFieldWidth.getText());
            int width = iwidth.intValue() * dpi;
            Float iheight = Float.parseFloat(jFormattedTextFieldHeight.getText());
            int height = iheight.intValue() * dpi;
            //String imageDir = jTextFieldImageDir.getText();
            ResizeTask task = new ResizeTask(opfFile, width, height);
            task.execute();
             //jButtonShrink.setEnabled(true);
            //setCursor(Cursor.getPredefinedCursor(Cursor.DEFAULT_CURSOR));
        }


    }//GEN-LAST:event_jButtonShrinkActionPerformed

    private void jButtonChooseOPFFileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonChooseOPFFileActionPerformed
        final JFileChooser jfc = new JFileChooser();
        FilterOPF opff = new FilterOPF();
        jfc.setFileFilter(opff);
        //jfc.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
        int result = jfc.showOpenDialog(jPanelImageResize);
        if (result == JFileChooser.APPROVE_OPTION) {
            File file = jfc.getSelectedFile();
            jTextFieldOPFDir.setText(file.getAbsolutePath());
        } else {
            return;
        }
    }//GEN-LAST:event_jButtonChooseOPFFileActionPerformed

    private void jButtonCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonCancelActionPerformed
        this.setVisible(false);
    }//GEN-LAST:event_jButtonCancelActionPerformed

    private void jFormattedTextFieldWidthActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jFormattedTextFieldWidthActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jFormattedTextFieldWidthActionPerformed

    private void jFormattedTextFieldHeightActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jFormattedTextFieldHeightActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jFormattedTextFieldHeightActionPerformed

    //background thread
    private class ResizeTask extends SwingWorker<Void, String> {
        File opfFile = null;
        String imageDir;
        int width;
        int height;

        ResizeTask(File opfFile, int width, int height) {
            //this.imageDir = imageDir;
            this.opfFile = opfFile;
            this.height = height;
            this.width = width;
        }

        @Override
        protected Void doInBackground() {
            publish("shrinking images..");
            try {
                //downsize images
                File sourceDir = opfFile.getParentFile();
                OPFReader opfReader = new OPFReader(opfFile);
                String convertexec = FrameMain.applicationProps.getProperty("imagemagickdir") + File.separator + "convert";
                File converter = new File(convertexec);
                MagickWrapper magick = new MagickWrapper(converter);
                NodeList nodes = opfReader.getImageList();
                jProgressBar.setMinimum(0);
                jProgressBar.setMaximum(nodes.getLength());
                jProgressBar.setStringPainted(true);
                        for (int i = 0; i < nodes.getLength(); i++) {
                            File file = new File(sourceDir, nodes.item(i).getNodeValue());
                            publish(String.format("processing image %s", file.getName()));
                            magick.resize(file, file, width, height);
                            jProgressBar.setValue(i);
                        }
            } catch (Exception ex) {
                System.out.println(ex.getMessage());
            } finally {
                return null;
            }
        }
        /*
         * Executed in event dispatching thread
         */

        @Override
        public void done() {
            jProgressBar.setValue(0);
            jButtonShrink.setEnabled(true);
            setCursor(null); //turn off the wait cursor
            publish("Done!");
        }

        @Override
        protected void process(List<String> messages) {
            String status = messages.get(messages.size() - 1);
            jLabelStatus.setText(status);
        }
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonCancel;
    private javax.swing.JButton jButtonChooseOPFFile;
    private javax.swing.JButton jButtonShrink;
    private javax.swing.JFormattedTextField jFormattedTextFieldDPI;
    private javax.swing.JFormattedTextField jFormattedTextFieldHeight;
    private javax.swing.JFormattedTextField jFormattedTextFieldWidth;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabelStatus;
    private javax.swing.JPanel jPanelImageResize;
    private javax.swing.JProgressBar jProgressBar;
    private javax.swing.JTextField jTextFieldOPFDir;
    // End of variables declaration//GEN-END:variables
}
